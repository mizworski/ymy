

module PrettyMuchNothing where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
data Program = Progr [Stmt]
  deriving (Eq, Ord, Show, Read)

data Stmt
    | ExprS Expression_stmt
  deriving (Eq, Ord, Show, Read)

data Dec = Declarator Ident Type
  deriving (Eq, Ord, Show, Read)

data Type
    = Tunit
    | Tarray Type
    | Tint
    | Tbool
    | Tstring
    | Tfun Type Type
    | Tfunarg Type Type
  deriving (Eq, Ord, Show, Read)

data Expression_stmt = SexprEmpty | Sexpr Exp
  deriving (Eq, Ord, Show, Read)


data Exp
    = Elambda [Dec] Exp
  deriving (Eq, Ord, Show, Read)



