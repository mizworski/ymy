-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from bnfc/ParYmyLang.y
-----------------------------------------------------------------------------

state 71 contains 1 shift/reduce conflicts.
state 124 contains 1 shift/reduce conflicts.
state 143 contains 1 shift/reduce conflicts.
state 154 contains 1 shift/reduce conflicts.
state 172 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Stmt -> Decl_stmt                                  (5)
	Stmt -> Compound_stmt                              (6)
	Stmt -> Expression_stmt                            (7)
	Stmt -> Selection_stmt                             (8)
	Stmt -> Iter_stmt                                  (9)
	Stmt -> Flow_stmt                                  (10)
	Stmt -> Print_stmt                                 (11)
	ListStmt ->                                        (12)
	ListStmt -> ListStmt Stmt                          (13)
	Dec -> Ident '::' Type2                            (14)
	ListDec ->                                         (15)
	ListDec -> Dec                                     (16)
	ListDec -> Dec ',' ListDec                         (17)
	Type -> 'Unit'                                     (18)
	Type -> '(' Type2 '->' Type ')'                    (19)
	Type -> Type1                                      (20)
	Type2 -> '[' Type2 ']'                             (21)
	Type2 -> 'Int'                                     (22)
	Type2 -> 'Bool'                                    (23)
	Type2 -> 'String'                                  (24)
	Type2 -> 'Any'                                     (25)
	Type2 -> 'Invalid'                                 (26)
	Type2 -> Type2 '->' Type                           (27)
	Type2 -> '(' Type ')'                              (28)
	Type1 -> Type2                                     (29)
	Decl_stmt -> Dec ';'                               (30)
	Decl_stmt -> 'def' Dec '(' ListDec ')' ':' Stmt    (31)
	Compound_stmt -> '{' ListStmt '}'                  (32)
	Iter_stmt -> 'while' Exp ':' Stmt                  (33)
	Iter_stmt -> 'for' Expression_stmt Expression_stmt Exp ':' Stmt   (34)
	Iter_stmt -> 'for' Expression_stmt Expression_stmt ':' Stmt   (35)
	Expression_stmt -> ';'                             (36)
	Expression_stmt -> Exp ';'                         (37)
	Selection_stmt -> 'if' Exp ':' Stmt                (38)
	Selection_stmt -> 'if' Exp ':' Stmt 'else' ':' Stmt   (39)
	Flow_stmt -> 'continue' ';'                        (40)
	Flow_stmt -> 'break' ';'                           (41)
	Flow_stmt -> 'return' Exp ';'                      (42)
	Flow_stmt -> 'return' ';'                          (43)
	Print_stmt -> 'print' Exp ';'                      (44)
	Exp -> 'lambda' ListDec ':' Exp                    (45)
	Exp -> Exp1                                        (46)
	Exp2 -> Exp12 Assignment_op Exp                    (47)
	Exp2 -> Exp3                                       (48)
	Exp3 -> Exp4 '?' Exp ':' Exp3                      (49)
	Exp3 -> Exp4                                       (50)
	Exp4 -> Exp4 'or' Exp5                             (51)
	Exp4 -> Exp5                                       (52)
	Exp5 -> Exp5 'and' Exp6                            (53)
	Exp5 -> Exp6                                       (54)
	Exp6 -> Unary_log_operator Exp5                    (55)
	Exp6 -> Exp7                                       (56)
	Exp7 -> Exp7 '==' Exp8                             (57)
	Exp7 -> Exp7 '!=' Exp8                             (58)
	Exp7 -> Exp8                                       (59)
	Exp8 -> Exp8 '<' Exp9                              (60)
	Exp8 -> Exp8 '>' Exp9                              (61)
	Exp8 -> Exp8 '<=' Exp9                             (62)
	Exp8 -> Exp8 '>=' Exp9                             (63)
	Exp8 -> Exp9                                       (64)
	Exp9 -> Exp9 '+' Exp10                             (65)
	Exp9 -> Exp9 '-' Exp10                             (66)
	Exp9 -> Exp10                                      (67)
	Exp10 -> Exp10 '*' Exp11                           (68)
	Exp10 -> Exp10 '/' Exp11                           (69)
	Exp10 -> Exp10 '%' Exp11                           (70)
	Exp10 -> '[' ListExp ']'                           (71)
	Exp10 -> Exp11                                     (72)
	Exp11 -> Unary_exp_operator Exp11                  (73)
	Exp11 -> Exp12                                     (74)
	Exp12 -> Exp12 '++'                                (75)
	Exp12 -> Exp12 '--'                                (76)
	Exp12 -> Exp12 '(' ListExp ')'                     (77)
	Exp12 -> Exp12 '[' Exp ']'                         (78)
	Exp12 -> Exp12 '[' ListExp ']'                     (79)
	Exp12 -> Exp13                                     (80)
	Exp13 -> Ident                                     (81)
	Exp13 -> Constant                                  (82)
	Exp13 -> '(' Exp ')'                               (83)
	Constant -> Integer                                (84)
	Constant -> String                                 (85)
	Constant -> 'True'                                 (86)
	Constant -> 'False'                                (87)
	ListExp -> Exp                                     (88)
	ListExp -> Exp ',' ListExp                         (89)
	Exp1 -> Exp2                                       (90)
	Unary_exp_operator -> '+'                          (91)
	Unary_exp_operator -> '-'                          (92)
	Unary_log_operator -> 'not'                        (93)
	Assignment_op -> '='                               (94)
	Assignment_op -> '*='                              (95)
	Assignment_op -> '/='                              (96)
	Assignment_op -> '%='                              (97)
	Assignment_op -> '+='                              (98)
	Assignment_op -> '-='                              (99)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'%='           { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'*='           { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	'+='           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'-='           { PT _ (TS _ 14) }
	'->'           { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	'/='           { PT _ (TS _ 17) }
	':'            { PT _ (TS _ 18) }
	'::'           { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'?'            { PT _ (TS _ 27) }
	'Any'          { PT _ (TS _ 28) }
	'Bool'         { PT _ (TS _ 29) }
	'False'        { PT _ (TS _ 30) }
	'Int'          { PT _ (TS _ 31) }
	'Invalid'      { PT _ (TS _ 32) }
	'String'       { PT _ (TS _ 33) }
	'True'         { PT _ (TS _ 34) }
	'Unit'         { PT _ (TS _ 35) }
	'['            { PT _ (TS _ 36) }
	']'            { PT _ (TS _ 37) }
	'and'          { PT _ (TS _ 38) }
	'break'        { PT _ (TS _ 39) }
	'continue'     { PT _ (TS _ 40) }
	'def'          { PT _ (TS _ 41) }
	'else'         { PT _ (TS _ 42) }
	'for'          { PT _ (TS _ 43) }
	'if'           { PT _ (TS _ 44) }
	'lambda'       { PT _ (TS _ 45) }
	'not'          { PT _ (TS _ 46) }
	'or'           { PT _ (TS _ 47) }
	'print'        { PT _ (TS _ 48) }
	'return'       { PT _ (TS _ 49) }
	'while'        { PT _ (TS _ 50) }
	'{'            { PT _ (TS _ 51) }
	'}'            { PT _ (TS _ 52) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Stmt            rules 5, 6, 7, 8, 9, 10, 11
	ListStmt        rules 12, 13
	Dec             rule  14
	ListDec         rules 15, 16, 17
	Type            rules 18, 19, 20
	Type2           rules 21, 22, 23, 24, 25, 26, 27, 28
	Type1           rule  29
	Decl_stmt       rules 30, 31
	Compound_stmt   rule  32
	Iter_stmt       rules 33, 34, 35
	Expression_stmt rules 36, 37
	Selection_stmt  rules 38, 39
	Flow_stmt       rules 40, 41, 42, 43
	Print_stmt      rule  44
	Exp             rules 45, 46
	Exp2            rules 47, 48
	Exp3            rules 49, 50
	Exp4            rules 51, 52
	Exp5            rules 53, 54
	Exp6            rules 55, 56
	Exp7            rules 57, 58, 59
	Exp8            rules 60, 61, 62, 63, 64
	Exp9            rules 65, 66, 67
	Exp10           rules 68, 69, 70, 71, 72
	Exp11           rules 73, 74
	Exp12           rules 75, 76, 77, 78, 79, 80
	Exp13           rules 81, 82, 83
	Constant        rules 84, 85, 86, 87
	ListExp         rules 88, 89
	Exp1            rule  90
	Unary_exp_operator rules 91, 92
	Unary_log_operator rule  93
	Assignment_op   rules 94, 95, 96, 97, 98, 99

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'False'        reduce using rule 12
	'True'         reduce using rule 12
	'['            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'def'          reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'lambda'       reduce using rule 12
	'not'          reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12

	Program        goto state 3
	ListStmt       goto state 4

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'-='           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	'::'           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	Program -> ListStmt .                               (rule 4)
	ListStmt -> ListStmt . Stmt                         (rule 13)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53
	%eof           reduce using rule 4

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 8
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 5

	Dec -> Ident . '::' Type2                           (rule 14)
	Exp13 -> Ident .                                    (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'%='           reduce using rule 81
	'('            reduce using rule 81
	'*'            reduce using rule 81
	'*='           reduce using rule 81
	'+'            reduce using rule 81
	'++'           reduce using rule 81
	'+='           reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'-='           reduce using rule 81
	'/'            reduce using rule 81
	'/='           reduce using rule 81
	'::'           shift, and enter state 101
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'='            reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'?'            reduce using rule 81
	'['            reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81


State 6

	Constant -> Integer .                               (rule 84)

	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'%='           reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'*='           reduce using rule 84
	'+'            reduce using rule 84
	'++'           reduce using rule 84
	'+='           reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'--'           reduce using rule 84
	'-='           reduce using rule 84
	'/'            reduce using rule 84
	'/='           reduce using rule 84
	':'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'='            reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	'?'            reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	'and'          reduce using rule 84
	'or'           reduce using rule 84


State 7

	Constant -> String .                                (rule 85)

	'!='           reduce using rule 85
	'%'            reduce using rule 85
	'%='           reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'*'            reduce using rule 85
	'*='           reduce using rule 85
	'+'            reduce using rule 85
	'++'           reduce using rule 85
	'+='           reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'--'           reduce using rule 85
	'-='           reduce using rule 85
	'/'            reduce using rule 85
	'/='           reduce using rule 85
	':'            reduce using rule 85
	';'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'='            reduce using rule 85
	'=='           reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	'?'            reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	'and'          reduce using rule 85
	'or'           reduce using rule 85


State 8

	ListStmt -> ListStmt Stmt .                         (rule 13)

	'('            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'False'        reduce using rule 13
	'True'         reduce using rule 13
	'['            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'def'          reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'lambda'       reduce using rule 13
	'not'          reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 9

	Decl_stmt -> Dec . ';'                              (rule 30)

	';'            shift, and enter state 100


State 10

	Stmt -> Decl_stmt .                                 (rule 5)

	'('            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'False'        reduce using rule 5
	'True'         reduce using rule 5
	'['            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'def'          reduce using rule 5
	'else'         reduce using rule 5
	'for'          reduce using rule 5
	'if'           reduce using rule 5
	'lambda'       reduce using rule 5
	'not'          reduce using rule 5
	'print'        reduce using rule 5
	'return'       reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 11

	Stmt -> Compound_stmt .                             (rule 6)

	'('            reduce using rule 6
	'+'            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'False'        reduce using rule 6
	'True'         reduce using rule 6
	'['            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'def'          reduce using rule 6
	'else'         reduce using rule 6
	'for'          reduce using rule 6
	'if'           reduce using rule 6
	'lambda'       reduce using rule 6
	'not'          reduce using rule 6
	'print'        reduce using rule 6
	'return'       reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 12

	Stmt -> Iter_stmt .                                 (rule 9)

	'('            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'False'        reduce using rule 9
	'True'         reduce using rule 9
	'['            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'def'          reduce using rule 9
	'else'         reduce using rule 9
	'for'          reduce using rule 9
	'if'           reduce using rule 9
	'lambda'       reduce using rule 9
	'not'          reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 13

	Stmt -> Expression_stmt .                           (rule 7)

	'('            reduce using rule 7
	'+'            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'False'        reduce using rule 7
	'True'         reduce using rule 7
	'['            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'def'          reduce using rule 7
	'else'         reduce using rule 7
	'for'          reduce using rule 7
	'if'           reduce using rule 7
	'lambda'       reduce using rule 7
	'not'          reduce using rule 7
	'print'        reduce using rule 7
	'return'       reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 14

	Stmt -> Selection_stmt .                            (rule 8)

	'('            reduce using rule 8
	'+'            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'False'        reduce using rule 8
	'True'         reduce using rule 8
	'['            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'def'          reduce using rule 8
	'else'         reduce using rule 8
	'for'          reduce using rule 8
	'if'           reduce using rule 8
	'lambda'       reduce using rule 8
	'not'          reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 15

	Stmt -> Flow_stmt .                                 (rule 10)

	'('            reduce using rule 10
	'+'            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'False'        reduce using rule 10
	'True'         reduce using rule 10
	'['            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'def'          reduce using rule 10
	'else'         reduce using rule 10
	'for'          reduce using rule 10
	'if'           reduce using rule 10
	'lambda'       reduce using rule 10
	'not'          reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 16

	Stmt -> Print_stmt .                                (rule 11)

	'('            reduce using rule 11
	'+'            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'False'        reduce using rule 11
	'True'         reduce using rule 11
	'['            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'def'          reduce using rule 11
	'else'         reduce using rule 11
	'for'          reduce using rule 11
	'if'           reduce using rule 11
	'lambda'       reduce using rule 11
	'not'          reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 17

	Expression_stmt -> Exp . ';'                        (rule 37)

	';'            shift, and enter state 99


State 18

	Exp1 -> Exp2 .                                      (rule 90)

	')'            reduce using rule 90
	','            reduce using rule 90
	':'            reduce using rule 90
	';'            reduce using rule 90
	']'            reduce using rule 90


State 19

	Exp2 -> Exp3 .                                      (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	']'            reduce using rule 48


State 20

	Exp3 -> Exp4 . '?' Exp ':' Exp3                     (rule 49)
	Exp3 -> Exp4 .                                      (rule 50)
	Exp4 -> Exp4 . 'or' Exp5                            (rule 51)

	')'            reduce using rule 50
	','            reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'?'            shift, and enter state 97
	']'            reduce using rule 50
	'or'           shift, and enter state 98


State 21

	Exp4 -> Exp5 .                                      (rule 52)
	Exp5 -> Exp5 . 'and' Exp6                           (rule 53)

	')'            reduce using rule 52
	','            reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'?'            reduce using rule 52
	']'            reduce using rule 52
	'and'          shift, and enter state 96
	'or'           reduce using rule 52


State 22

	Exp5 -> Exp6 .                                      (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	':'            reduce using rule 54
	';'            reduce using rule 54
	'?'            reduce using rule 54
	']'            reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54


State 23

	Exp6 -> Exp7 .                                      (rule 56)
	Exp7 -> Exp7 . '==' Exp8                            (rule 57)
	Exp7 -> Exp7 . '!=' Exp8                            (rule 58)

	'!='           shift, and enter state 94
	')'            reduce using rule 56
	','            reduce using rule 56
	':'            reduce using rule 56
	';'            reduce using rule 56
	'=='           shift, and enter state 95
	'?'            reduce using rule 56
	']'            reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56


State 24

	Exp7 -> Exp8 .                                      (rule 59)
	Exp8 -> Exp8 . '<' Exp9                             (rule 60)
	Exp8 -> Exp8 . '>' Exp9                             (rule 61)
	Exp8 -> Exp8 . '<=' Exp9                            (rule 62)
	Exp8 -> Exp8 . '>=' Exp9                            (rule 63)

	'!='           reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	':'            reduce using rule 59
	';'            reduce using rule 59
	'<'            shift, and enter state 90
	'<='           shift, and enter state 91
	'=='           reduce using rule 59
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	'?'            reduce using rule 59
	']'            reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59


State 25

	Exp8 -> Exp9 .                                      (rule 64)
	Exp9 -> Exp9 . '+' Exp10                            (rule 65)
	Exp9 -> Exp9 . '-' Exp10                            (rule 66)

	'!='           reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 88
	','            reduce using rule 64
	'-'            shift, and enter state 89
	':'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'?'            reduce using rule 64
	']'            reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64


State 26

	Exp9 -> Exp10 .                                     (rule 67)
	Exp10 -> Exp10 . '*' Exp11                          (rule 68)
	Exp10 -> Exp10 . '/' Exp11                          (rule 69)
	Exp10 -> Exp10 . '%' Exp11                          (rule 70)

	'!='           reduce using rule 67
	'%'            shift, and enter state 85
	')'            reduce using rule 67
	'*'            shift, and enter state 86
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 87
	':'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'?'            reduce using rule 67
	']'            reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67


State 27

	Exp10 -> Exp11 .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	']'            reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72


State 28

	Exp2 -> Exp12 . Assignment_op Exp                   (rule 47)
	Exp11 -> Exp12 .                                    (rule 74)
	Exp12 -> Exp12 . '++'                               (rule 75)
	Exp12 -> Exp12 . '--'                               (rule 76)
	Exp12 -> Exp12 . '(' ListExp ')'                    (rule 77)
	Exp12 -> Exp12 . '[' Exp ']'                        (rule 78)
	Exp12 -> Exp12 . '[' ListExp ']'                    (rule 79)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'%='           shift, and enter state 75
	'('            shift, and enter state 76
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'*='           shift, and enter state 77
	'+'            reduce using rule 74
	'++'           shift, and enter state 78
	'+='           shift, and enter state 79
	','            reduce using rule 74
	'-'            reduce using rule 74
	'--'           shift, and enter state 80
	'-='           shift, and enter state 81
	'/'            reduce using rule 74
	'/='           shift, and enter state 82
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'='            shift, and enter state 83
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	'['            shift, and enter state 84
	']'            reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74

	Assignment_op  goto state 74

State 29

	Exp12 -> Exp13 .                                    (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'%='           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'*='           reduce using rule 80
	'+'            reduce using rule 80
	'++'           reduce using rule 80
	'+='           reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'--'           reduce using rule 80
	'-='           reduce using rule 80
	'/'            reduce using rule 80
	'/='           reduce using rule 80
	':'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'='            reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'?'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'and'          reduce using rule 80
	'or'           reduce using rule 80


State 30

	Exp13 -> Constant .                                 (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'%='           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'*='           reduce using rule 82
	'+'            reduce using rule 82
	'++'           reduce using rule 82
	'+='           reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'--'           reduce using rule 82
	'-='           reduce using rule 82
	'/'            reduce using rule 82
	'/='           reduce using rule 82
	':'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'='            reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'?'            reduce using rule 82
	'['            reduce using rule 82
	']'            reduce using rule 82
	'and'          reduce using rule 82
	'or'           reduce using rule 82


State 31

	Exp -> Exp1 .                                       (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	']'            reduce using rule 46


State 32

	Exp11 -> Unary_exp_operator . Exp11                 (rule 73)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp11          goto state 73
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 33

	Exp6 -> Unary_log_operator . Exp5                   (rule 55)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp5           goto state 71
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 34

	Exp13 -> '(' . Exp ')'                              (rule 83)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 70
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 35

	Unary_exp_operator -> '+' .                         (rule 91)

	'('            reduce using rule 91
	'+'            reduce using rule 91
	'-'            reduce using rule 91
	'False'        reduce using rule 91
	'True'         reduce using rule 91
	L_ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 36

	Unary_exp_operator -> '-' .                         (rule 92)

	'('            reduce using rule 92
	'+'            reduce using rule 92
	'-'            reduce using rule 92
	'False'        reduce using rule 92
	'True'         reduce using rule 92
	L_ident        reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92


State 37

	Expression_stmt -> ';' .                            (rule 36)

	'('            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'False'        reduce using rule 36
	'True'         reduce using rule 36
	'['            reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'def'          reduce using rule 36
	'else'         reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'lambda'       reduce using rule 36
	'not'          reduce using rule 36
	'print'        reduce using rule 36
	'return'       reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36
	%eof           reduce using rule 36


State 38

	Constant -> 'False' .                               (rule 87)

	'!='           reduce using rule 87
	'%'            reduce using rule 87
	'%='           reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'*'            reduce using rule 87
	'*='           reduce using rule 87
	'+'            reduce using rule 87
	'++'           reduce using rule 87
	'+='           reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'-='           reduce using rule 87
	'/'            reduce using rule 87
	'/='           reduce using rule 87
	':'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'='            reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'?'            reduce using rule 87
	'['            reduce using rule 87
	']'            reduce using rule 87
	'and'          reduce using rule 87
	'or'           reduce using rule 87


State 39

	Constant -> 'True' .                                (rule 86)

	'!='           reduce using rule 86
	'%'            reduce using rule 86
	'%='           reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	'*'            reduce using rule 86
	'*='           reduce using rule 86
	'+'            reduce using rule 86
	'++'           reduce using rule 86
	'+='           reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'--'           reduce using rule 86
	'-='           reduce using rule 86
	'/'            reduce using rule 86
	'/='           reduce using rule 86
	':'            reduce using rule 86
	';'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'='            reduce using rule 86
	'=='           reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	'?'            reduce using rule 86
	'['            reduce using rule 86
	']'            reduce using rule 86
	'and'          reduce using rule 86
	'or'           reduce using rule 86


State 40

	Exp10 -> '[' . ListExp ']'                          (rule 71)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 68
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	ListExp        goto state 69
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 41

	Flow_stmt -> 'break' . ';'                          (rule 41)

	';'            shift, and enter state 67


State 42

	Flow_stmt -> 'continue' . ';'                       (rule 40)

	';'            shift, and enter state 66


State 43

	Decl_stmt -> 'def' . Dec '(' ListDec ')' ':' Stmt    (rule 31)

	L_ident        shift, and enter state 2

	Ident          goto state 60
	Dec            goto state 65

State 44

	Iter_stmt -> 'for' . Expression_stmt Expression_stmt Exp ':' Stmt    (rule 34)
	Iter_stmt -> 'for' . Expression_stmt Expression_stmt ':' Stmt    (rule 35)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Expression_stmtgoto state 64
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 45

	Selection_stmt -> 'if' . Exp ':' Stmt               (rule 38)
	Selection_stmt -> 'if' . Exp ':' Stmt 'else' ':' Stmt    (rule 39)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 63
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 46

	Exp -> 'lambda' . ListDec ':' Exp                   (rule 45)

	':'            reduce using rule 15
	L_ident        shift, and enter state 2

	Ident          goto state 60
	Dec            goto state 61
	ListDec        goto state 62

State 47

	Unary_log_operator -> 'not' .                       (rule 93)

	'('            reduce using rule 93
	'+'            reduce using rule 93
	'-'            reduce using rule 93
	'False'        reduce using rule 93
	'True'         reduce using rule 93
	'['            reduce using rule 93
	'not'          reduce using rule 93
	L_ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 48

	Print_stmt -> 'print' . Exp ';'                     (rule 44)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 59
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 49

	Flow_stmt -> 'return' . Exp ';'                     (rule 42)
	Flow_stmt -> 'return' . ';'                         (rule 43)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 58
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 57
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 50

	Iter_stmt -> 'while' . Exp ':' Stmt                 (rule 33)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 56
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 51

	Compound_stmt -> '{' . ListStmt '}'                 (rule 32)

	'('            reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'False'        reduce using rule 12
	'True'         reduce using rule 12
	'['            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'def'          reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'lambda'       reduce using rule 12
	'not'          reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12

	ListStmt       goto state 54

State 52

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'%='           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'*='           reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	'+='           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'-='           reduce using rule 2
	'/'            reduce using rule 2
	'/='           reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2


State 53

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'%='           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'*='           reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	'+='           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'-='           reduce using rule 3
	'/'            reduce using rule 3
	'/='           reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'and'          reduce using rule 3
	'or'           reduce using rule 3


State 54

	ListStmt -> ListStmt . Stmt                         (rule 13)
	Compound_stmt -> '{' ListStmt . '}'                 (rule 32)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	'}'            shift, and enter state 139
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 8
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 55

	Exp13 -> Ident .                                    (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'%='           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'*='           reduce using rule 81
	'+'            reduce using rule 81
	'++'           reduce using rule 81
	'+='           reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'-='           reduce using rule 81
	'/'            reduce using rule 81
	'/='           reduce using rule 81
	':'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'='            reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'?'            reduce using rule 81
	'['            reduce using rule 81
	']'            reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81


State 56

	Iter_stmt -> 'while' Exp . ':' Stmt                 (rule 33)

	':'            shift, and enter state 138


State 57

	Flow_stmt -> 'return' Exp . ';'                     (rule 42)

	';'            shift, and enter state 137


State 58

	Flow_stmt -> 'return' ';' .                         (rule 43)

	'('            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	';'            reduce using rule 43
	'False'        reduce using rule 43
	'True'         reduce using rule 43
	'['            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'def'          reduce using rule 43
	'else'         reduce using rule 43
	'for'          reduce using rule 43
	'if'           reduce using rule 43
	'lambda'       reduce using rule 43
	'not'          reduce using rule 43
	'print'        reduce using rule 43
	'return'       reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43
	%eof           reduce using rule 43


State 59

	Print_stmt -> 'print' Exp . ';'                     (rule 44)

	';'            shift, and enter state 136


State 60

	Dec -> Ident . '::' Type2                           (rule 14)

	'::'           shift, and enter state 101


State 61

	ListDec -> Dec .                                    (rule 16)
	ListDec -> Dec . ',' ListDec                        (rule 17)

	')'            reduce using rule 16
	','            shift, and enter state 135
	':'            reduce using rule 16


State 62

	Exp -> 'lambda' ListDec . ':' Exp                   (rule 45)

	':'            shift, and enter state 134


State 63

	Selection_stmt -> 'if' Exp . ':' Stmt               (rule 38)
	Selection_stmt -> 'if' Exp . ':' Stmt 'else' ':' Stmt    (rule 39)

	':'            shift, and enter state 133


State 64

	Iter_stmt -> 'for' Expression_stmt . Expression_stmt Exp ':' Stmt    (rule 34)
	Iter_stmt -> 'for' Expression_stmt . Expression_stmt ':' Stmt    (rule 35)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Expression_stmtgoto state 132
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 65

	Decl_stmt -> 'def' Dec . '(' ListDec ')' ':' Stmt    (rule 31)

	'('            shift, and enter state 131


State 66

	Flow_stmt -> 'continue' ';' .                       (rule 40)

	'('            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'False'        reduce using rule 40
	'True'         reduce using rule 40
	'['            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'def'          reduce using rule 40
	'else'         reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'lambda'       reduce using rule 40
	'not'          reduce using rule 40
	'print'        reduce using rule 40
	'return'       reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40
	%eof           reduce using rule 40


State 67

	Flow_stmt -> 'break' ';' .                          (rule 41)

	'('            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'False'        reduce using rule 41
	'True'         reduce using rule 41
	'['            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'def'          reduce using rule 41
	'else'         reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'lambda'       reduce using rule 41
	'not'          reduce using rule 41
	'print'        reduce using rule 41
	'return'       reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41
	%eof           reduce using rule 41


State 68

	ListExp -> Exp .                                    (rule 88)
	ListExp -> Exp . ',' ListExp                        (rule 89)

	')'            reduce using rule 88
	','            shift, and enter state 130
	']'            reduce using rule 88


State 69

	Exp10 -> '[' ListExp . ']'                          (rule 71)

	']'            shift, and enter state 129


State 70

	Exp13 -> '(' Exp . ')'                              (rule 83)

	')'            shift, and enter state 128


State 71

	Exp5 -> Exp5 . 'and' Exp6                           (rule 53)
	Exp6 -> Unary_log_operator Exp5 .                   (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	':'            reduce using rule 55
	';'            reduce using rule 55
	'?'            reduce using rule 55
	']'            reduce using rule 55
	'and'          shift, and enter state 96
			(reduce using rule 55)

	'or'           reduce using rule 55


State 72

	Exp11 -> Exp12 .                                    (rule 74)
	Exp12 -> Exp12 . '++'                               (rule 75)
	Exp12 -> Exp12 . '--'                               (rule 76)
	Exp12 -> Exp12 . '(' ListExp ')'                    (rule 77)
	Exp12 -> Exp12 . '[' Exp ']'                        (rule 78)
	Exp12 -> Exp12 . '[' ListExp ']'                    (rule 79)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'('            shift, and enter state 76
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	'++'           shift, and enter state 78
	','            reduce using rule 74
	'-'            reduce using rule 74
	'--'           shift, and enter state 80
	'/'            reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'?'            reduce using rule 74
	'['            shift, and enter state 84
	']'            reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74


State 73

	Exp11 -> Unary_exp_operator Exp11 .                 (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'?'            reduce using rule 73
	']'            reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73


State 74

	Exp2 -> Exp12 Assignment_op . Exp                   (rule 47)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 127
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 75

	Assignment_op -> '%=' .                             (rule 97)

	'('            reduce using rule 97
	'+'            reduce using rule 97
	'-'            reduce using rule 97
	'False'        reduce using rule 97
	'True'         reduce using rule 97
	'['            reduce using rule 97
	'lambda'       reduce using rule 97
	'not'          reduce using rule 97
	L_ident        reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97


State 76

	Exp12 -> Exp12 '(' . ListExp ')'                    (rule 77)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 68
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	ListExp        goto state 126
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 77

	Assignment_op -> '*=' .                             (rule 95)

	'('            reduce using rule 95
	'+'            reduce using rule 95
	'-'            reduce using rule 95
	'False'        reduce using rule 95
	'True'         reduce using rule 95
	'['            reduce using rule 95
	'lambda'       reduce using rule 95
	'not'          reduce using rule 95
	L_ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95


State 78

	Exp12 -> Exp12 '++' .                               (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'%='           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'*='           reduce using rule 75
	'+'            reduce using rule 75
	'++'           reduce using rule 75
	'+='           reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'--'           reduce using rule 75
	'-='           reduce using rule 75
	'/'            reduce using rule 75
	'/='           reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'='            reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'?'            reduce using rule 75
	'['            reduce using rule 75
	']'            reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75


State 79

	Assignment_op -> '+=' .                             (rule 98)

	'('            reduce using rule 98
	'+'            reduce using rule 98
	'-'            reduce using rule 98
	'False'        reduce using rule 98
	'True'         reduce using rule 98
	'['            reduce using rule 98
	'lambda'       reduce using rule 98
	'not'          reduce using rule 98
	L_ident        reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98


State 80

	Exp12 -> Exp12 '--' .                               (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'%='           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'*='           reduce using rule 76
	'+'            reduce using rule 76
	'++'           reduce using rule 76
	'+='           reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'--'           reduce using rule 76
	'-='           reduce using rule 76
	'/'            reduce using rule 76
	'/='           reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'='            reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'?'            reduce using rule 76
	'['            reduce using rule 76
	']'            reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76


State 81

	Assignment_op -> '-=' .                             (rule 99)

	'('            reduce using rule 99
	'+'            reduce using rule 99
	'-'            reduce using rule 99
	'False'        reduce using rule 99
	'True'         reduce using rule 99
	'['            reduce using rule 99
	'lambda'       reduce using rule 99
	'not'          reduce using rule 99
	L_ident        reduce using rule 99
	L_integ        reduce using rule 99
	L_quoted       reduce using rule 99


State 82

	Assignment_op -> '/=' .                             (rule 96)

	'('            reduce using rule 96
	'+'            reduce using rule 96
	'-'            reduce using rule 96
	'False'        reduce using rule 96
	'True'         reduce using rule 96
	'['            reduce using rule 96
	'lambda'       reduce using rule 96
	'not'          reduce using rule 96
	L_ident        reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96


State 83

	Assignment_op -> '=' .                              (rule 94)

	'('            reduce using rule 94
	'+'            reduce using rule 94
	'-'            reduce using rule 94
	'False'        reduce using rule 94
	'True'         reduce using rule 94
	'['            reduce using rule 94
	'lambda'       reduce using rule 94
	'not'          reduce using rule 94
	L_ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94


State 84

	Exp12 -> Exp12 '[' . Exp ']'                        (rule 78)
	Exp12 -> Exp12 '[' . ListExp ']'                    (rule 79)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 124
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	ListExp        goto state 125
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 85

	Exp10 -> Exp10 '%' . Exp11                          (rule 70)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp11          goto state 123
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 86

	Exp10 -> Exp10 '*' . Exp11                          (rule 68)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp11          goto state 122
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 87

	Exp10 -> Exp10 '/' . Exp11                          (rule 69)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp11          goto state 121
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 88

	Exp9 -> Exp9 '+' . Exp10                            (rule 65)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp10          goto state 120
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 89

	Exp9 -> Exp9 '-' . Exp10                            (rule 66)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp10          goto state 119
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 90

	Exp8 -> Exp8 '<' . Exp9                             (rule 60)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp9           goto state 118
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 91

	Exp8 -> Exp8 '<=' . Exp9                            (rule 62)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp9           goto state 117
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 92

	Exp8 -> Exp8 '>' . Exp9                             (rule 61)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp9           goto state 116
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 93

	Exp8 -> Exp8 '>=' . Exp9                            (rule 63)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp9           goto state 115
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 94

	Exp7 -> Exp7 '!=' . Exp8                            (rule 58)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp8           goto state 114
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 95

	Exp7 -> Exp7 '==' . Exp8                            (rule 57)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp8           goto state 113
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32

State 96

	Exp5 -> Exp5 'and' . Exp6                           (rule 53)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp6           goto state 112
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 97

	Exp3 -> Exp4 '?' . Exp ':' Exp3                     (rule 49)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 111
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 98

	Exp4 -> Exp4 'or' . Exp5                            (rule 51)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp5           goto state 110
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 99

	Expression_stmt -> Exp ';' .                        (rule 37)

	'('            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'False'        reduce using rule 37
	'True'         reduce using rule 37
	'['            reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'def'          reduce using rule 37
	'else'         reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'lambda'       reduce using rule 37
	'not'          reduce using rule 37
	'print'        reduce using rule 37
	'return'       reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37
	%eof           reduce using rule 37


State 100

	Decl_stmt -> Dec ';' .                              (rule 30)

	'('            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'False'        reduce using rule 30
	'True'         reduce using rule 30
	'['            reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'def'          reduce using rule 30
	'else'         reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'lambda'       reduce using rule 30
	'not'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30
	%eof           reduce using rule 30


State 101

	Dec -> Ident '::' . Type2                           (rule 14)

	'('            shift, and enter state 103
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'['            shift, and enter state 109

	Type2          goto state 102

State 102

	Dec -> Ident '::' Type2 .                           (rule 14)
	Type2 -> Type2 . '->' Type                          (rule 27)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	'->'           shift, and enter state 158
	':'            reduce using rule 14
	';'            reduce using rule 14


State 103

	Type2 -> '(' . Type ')'                             (rule 28)

	'('            shift, and enter state 156
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 157
	'['            shift, and enter state 109

	Type           goto state 153
	Type2          goto state 154
	Type1          goto state 155

State 104

	Type2 -> 'Any' .                                    (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	','            reduce using rule 25
	'->'           reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	']'            reduce using rule 25


State 105

	Type2 -> 'Bool' .                                   (rule 23)

	'('            reduce using rule 23
	')'            reduce using rule 23
	','            reduce using rule 23
	'->'           reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	']'            reduce using rule 23


State 106

	Type2 -> 'Int' .                                    (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'->'           reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	']'            reduce using rule 22


State 107

	Type2 -> 'Invalid' .                                (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	','            reduce using rule 26
	'->'           reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	']'            reduce using rule 26


State 108

	Type2 -> 'String' .                                 (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	'->'           reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	']'            reduce using rule 24


State 109

	Type2 -> '[' . Type2 ']'                            (rule 21)

	'('            shift, and enter state 103
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'['            shift, and enter state 109

	Type2          goto state 152

State 110

	Exp4 -> Exp4 'or' Exp5 .                            (rule 51)
	Exp5 -> Exp5 . 'and' Exp6                           (rule 53)

	')'            reduce using rule 51
	','            reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'?'            reduce using rule 51
	']'            reduce using rule 51
	'and'          shift, and enter state 96
	'or'           reduce using rule 51


State 111

	Exp3 -> Exp4 '?' Exp . ':' Exp3                     (rule 49)

	':'            shift, and enter state 151


State 112

	Exp5 -> Exp5 'and' Exp6 .                           (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	':'            reduce using rule 53
	';'            reduce using rule 53
	'?'            reduce using rule 53
	']'            reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53


State 113

	Exp7 -> Exp7 '==' Exp8 .                            (rule 57)
	Exp8 -> Exp8 . '<' Exp9                             (rule 60)
	Exp8 -> Exp8 . '>' Exp9                             (rule 61)
	Exp8 -> Exp8 . '<=' Exp9                            (rule 62)
	Exp8 -> Exp8 . '>=' Exp9                            (rule 63)

	'!='           reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	':'            reduce using rule 57
	';'            reduce using rule 57
	'<'            shift, and enter state 90
	'<='           shift, and enter state 91
	'=='           reduce using rule 57
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	'?'            reduce using rule 57
	']'            reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57


State 114

	Exp7 -> Exp7 '!=' Exp8 .                            (rule 58)
	Exp8 -> Exp8 . '<' Exp9                             (rule 60)
	Exp8 -> Exp8 . '>' Exp9                             (rule 61)
	Exp8 -> Exp8 . '<=' Exp9                            (rule 62)
	Exp8 -> Exp8 . '>=' Exp9                            (rule 63)

	'!='           reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	':'            reduce using rule 58
	';'            reduce using rule 58
	'<'            shift, and enter state 90
	'<='           shift, and enter state 91
	'=='           reduce using rule 58
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	'?'            reduce using rule 58
	']'            reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58


State 115

	Exp8 -> Exp8 '>=' Exp9 .                            (rule 63)
	Exp9 -> Exp9 . '+' Exp10                            (rule 65)
	Exp9 -> Exp9 . '-' Exp10                            (rule 66)

	'!='           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 88
	','            reduce using rule 63
	'-'            shift, and enter state 89
	':'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'?'            reduce using rule 63
	']'            reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63


State 116

	Exp8 -> Exp8 '>' Exp9 .                             (rule 61)
	Exp9 -> Exp9 . '+' Exp10                            (rule 65)
	Exp9 -> Exp9 . '-' Exp10                            (rule 66)

	'!='           reduce using rule 61
	')'            reduce using rule 61
	'+'            shift, and enter state 88
	','            reduce using rule 61
	'-'            shift, and enter state 89
	':'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	']'            reduce using rule 61
	'and'          reduce using rule 61
	'or'           reduce using rule 61


State 117

	Exp8 -> Exp8 '<=' Exp9 .                            (rule 62)
	Exp9 -> Exp9 . '+' Exp10                            (rule 65)
	Exp9 -> Exp9 . '-' Exp10                            (rule 66)

	'!='           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 88
	','            reduce using rule 62
	'-'            shift, and enter state 89
	':'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'?'            reduce using rule 62
	']'            reduce using rule 62
	'and'          reduce using rule 62
	'or'           reduce using rule 62


State 118

	Exp8 -> Exp8 '<' Exp9 .                             (rule 60)
	Exp9 -> Exp9 . '+' Exp10                            (rule 65)
	Exp9 -> Exp9 . '-' Exp10                            (rule 66)

	'!='           reduce using rule 60
	')'            reduce using rule 60
	'+'            shift, and enter state 88
	','            reduce using rule 60
	'-'            shift, and enter state 89
	':'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'?'            reduce using rule 60
	']'            reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60


State 119

	Exp9 -> Exp9 '-' Exp10 .                            (rule 66)
	Exp10 -> Exp10 . '*' Exp11                          (rule 68)
	Exp10 -> Exp10 . '/' Exp11                          (rule 69)
	Exp10 -> Exp10 . '%' Exp11                          (rule 70)

	'!='           reduce using rule 66
	'%'            shift, and enter state 85
	')'            reduce using rule 66
	'*'            shift, and enter state 86
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 87
	':'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'?'            reduce using rule 66
	']'            reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66


State 120

	Exp9 -> Exp9 '+' Exp10 .                            (rule 65)
	Exp10 -> Exp10 . '*' Exp11                          (rule 68)
	Exp10 -> Exp10 . '/' Exp11                          (rule 69)
	Exp10 -> Exp10 . '%' Exp11                          (rule 70)

	'!='           reduce using rule 65
	'%'            shift, and enter state 85
	')'            reduce using rule 65
	'*'            shift, and enter state 86
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 87
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'?'            reduce using rule 65
	']'            reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65


State 121

	Exp10 -> Exp10 '/' Exp11 .                          (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	':'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'?'            reduce using rule 69
	']'            reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69


State 122

	Exp10 -> Exp10 '*' Exp11 .                          (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	':'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'?'            reduce using rule 68
	']'            reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68


State 123

	Exp10 -> Exp10 '%' Exp11 .                          (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	':'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'?'            reduce using rule 70
	']'            reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70


State 124

	Exp12 -> Exp12 '[' Exp . ']'                        (rule 78)
	ListExp -> Exp .                                    (rule 88)
	ListExp -> Exp . ',' ListExp                        (rule 89)

	','            shift, and enter state 130
	']'            shift, and enter state 150
			(reduce using rule 88)



State 125

	Exp12 -> Exp12 '[' ListExp . ']'                    (rule 79)

	']'            shift, and enter state 149


State 126

	Exp12 -> Exp12 '(' ListExp . ')'                    (rule 77)

	')'            shift, and enter state 148


State 127

	Exp2 -> Exp12 Assignment_op Exp .                   (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	']'            reduce using rule 47


State 128

	Exp13 -> '(' Exp ')' .                              (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'%='           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'*='           reduce using rule 83
	'+'            reduce using rule 83
	'++'           reduce using rule 83
	'+='           reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'--'           reduce using rule 83
	'-='           reduce using rule 83
	'/'            reduce using rule 83
	'/='           reduce using rule 83
	':'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'='            reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	'?'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'and'          reduce using rule 83
	'or'           reduce using rule 83


State 129

	Exp10 -> '[' ListExp ']' .                          (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	']'            reduce using rule 71
	'and'          reduce using rule 71
	'or'           reduce using rule 71


State 130

	ListExp -> Exp ',' . ListExp                        (rule 89)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 68
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	ListExp        goto state 147
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 131

	Decl_stmt -> 'def' Dec '(' . ListDec ')' ':' Stmt    (rule 31)

	')'            reduce using rule 15
	L_ident        shift, and enter state 2

	Ident          goto state 60
	Dec            goto state 61
	ListDec        goto state 146

State 132

	Iter_stmt -> 'for' Expression_stmt Expression_stmt . Exp ':' Stmt    (rule 34)
	Iter_stmt -> 'for' Expression_stmt Expression_stmt . ':' Stmt    (rule 35)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	':'            shift, and enter state 145
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 144
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 133

	Selection_stmt -> 'if' Exp ':' . Stmt               (rule 38)
	Selection_stmt -> 'if' Exp ':' . Stmt 'else' ':' Stmt    (rule 39)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 143
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 134

	Exp -> 'lambda' ListDec ':' . Exp                   (rule 45)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp            goto state 142
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 135

	ListDec -> Dec ',' . ListDec                        (rule 17)

	')'            reduce using rule 15
	':'            reduce using rule 15
	L_ident        shift, and enter state 2

	Ident          goto state 60
	Dec            goto state 61
	ListDec        goto state 141

State 136

	Print_stmt -> 'print' Exp ';' .                     (rule 44)

	'('            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	';'            reduce using rule 44
	'False'        reduce using rule 44
	'True'         reduce using rule 44
	'['            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'def'          reduce using rule 44
	'else'         reduce using rule 44
	'for'          reduce using rule 44
	'if'           reduce using rule 44
	'lambda'       reduce using rule 44
	'not'          reduce using rule 44
	'print'        reduce using rule 44
	'return'       reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_ident        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44
	%eof           reduce using rule 44


State 137

	Flow_stmt -> 'return' Exp ';' .                     (rule 42)

	'('            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'False'        reduce using rule 42
	'True'         reduce using rule 42
	'['            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'def'          reduce using rule 42
	'else'         reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'lambda'       reduce using rule 42
	'not'          reduce using rule 42
	'print'        reduce using rule 42
	'return'       reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42
	%eof           reduce using rule 42


State 138

	Iter_stmt -> 'while' Exp ':' . Stmt                 (rule 33)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 140
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 139

	Compound_stmt -> '{' ListStmt '}' .                 (rule 32)

	'('            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'False'        reduce using rule 32
	'True'         reduce using rule 32
	'['            reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'def'          reduce using rule 32
	'else'         reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'lambda'       reduce using rule 32
	'not'          reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32
	%eof           reduce using rule 32


State 140

	Iter_stmt -> 'while' Exp ':' Stmt .                 (rule 33)

	'('            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'False'        reduce using rule 33
	'True'         reduce using rule 33
	'['            reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'def'          reduce using rule 33
	'else'         reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'lambda'       reduce using rule 33
	'not'          reduce using rule 33
	'print'        reduce using rule 33
	'return'       reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33
	%eof           reduce using rule 33


State 141

	ListDec -> Dec ',' ListDec .                        (rule 17)

	')'            reduce using rule 17
	':'            reduce using rule 17


State 142

	Exp -> 'lambda' ListDec ':' Exp .                   (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	']'            reduce using rule 45


State 143

	Selection_stmt -> 'if' Exp ':' Stmt .               (rule 38)
	Selection_stmt -> 'if' Exp ':' Stmt . 'else' ':' Stmt    (rule 39)

	'('            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'False'        reduce using rule 38
	'True'         reduce using rule 38
	'['            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'def'          reduce using rule 38
	'else'         shift, and enter state 167
			(reduce using rule 38)

	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'lambda'       reduce using rule 38
	'not'          reduce using rule 38
	'print'        reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 144

	Iter_stmt -> 'for' Expression_stmt Expression_stmt Exp . ':' Stmt    (rule 34)

	':'            shift, and enter state 166


State 145

	Iter_stmt -> 'for' Expression_stmt Expression_stmt ':' . Stmt    (rule 35)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 165
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 146

	Decl_stmt -> 'def' Dec '(' ListDec . ')' ':' Stmt    (rule 31)

	')'            shift, and enter state 164


State 147

	ListExp -> Exp ',' ListExp .                        (rule 89)

	')'            reduce using rule 89
	']'            reduce using rule 89


State 148

	Exp12 -> Exp12 '(' ListExp ')' .                    (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'%='           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'*='           reduce using rule 77
	'+'            reduce using rule 77
	'++'           reduce using rule 77
	'+='           reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'--'           reduce using rule 77
	'-='           reduce using rule 77
	'/'            reduce using rule 77
	'/='           reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'='            reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'?'            reduce using rule 77
	'['            reduce using rule 77
	']'            reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77


State 149

	Exp12 -> Exp12 '[' ListExp ']' .                    (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'%='           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'*='           reduce using rule 79
	'+'            reduce using rule 79
	'++'           reduce using rule 79
	'+='           reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'--'           reduce using rule 79
	'-='           reduce using rule 79
	'/'            reduce using rule 79
	'/='           reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'='            reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'?'            reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79


State 150

	Exp12 -> Exp12 '[' Exp ']' .                        (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'%='           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'*='           reduce using rule 78
	'+'            reduce using rule 78
	'++'           reduce using rule 78
	'+='           reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'--'           reduce using rule 78
	'-='           reduce using rule 78
	'/'            reduce using rule 78
	'/='           reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'='            reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'?'            reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78


State 151

	Exp3 -> Exp4 '?' Exp ':' . Exp3                     (rule 49)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'not'          shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 55
	Integer        goto state 6
	String         goto state 7
	Exp3           goto state 163
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 72
	Exp13          goto state 29
	Constant       goto state 30
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 152

	Type2 -> '[' Type2 . ']'                            (rule 21)
	Type2 -> Type2 . '->' Type                          (rule 27)

	'->'           shift, and enter state 158
	']'            shift, and enter state 162


State 153

	Type2 -> '(' Type . ')'                             (rule 28)

	')'            shift, and enter state 161


State 154

	Type2 -> Type2 . '->' Type                          (rule 27)
	Type1 -> Type2 .                                    (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	','            reduce using rule 29
	'->'           shift, and enter state 158
			(reduce using rule 29)

	':'            reduce using rule 29
	';'            reduce using rule 29
	']'            reduce using rule 29


State 155

	Type -> Type1 .                                     (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'->'           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	']'            reduce using rule 20


State 156

	Type -> '(' . Type2 '->' Type ')'                   (rule 19)
	Type2 -> '(' . Type ')'                             (rule 28)

	'('            shift, and enter state 156
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 157
	'['            shift, and enter state 109

	Type           goto state 153
	Type2          goto state 160
	Type1          goto state 155

State 157

	Type -> 'Unit' .                                    (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	'->'           reduce using rule 18
	':'            reduce using rule 18
	';'            reduce using rule 18
	']'            reduce using rule 18


State 158

	Type2 -> Type2 '->' . Type                          (rule 27)

	'('            shift, and enter state 156
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 157
	'['            shift, and enter state 109

	Type           goto state 159
	Type2          goto state 154
	Type1          goto state 155

State 159

	Type2 -> Type2 '->' Type .                          (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	','            reduce using rule 27
	'->'           reduce using rule 27
	':'            reduce using rule 27
	';'            reduce using rule 27
	']'            reduce using rule 27


State 160

	Type -> '(' Type2 . '->' Type ')'                   (rule 19)
	Type2 -> Type2 . '->' Type                          (rule 27)
	Type1 -> Type2 .                                    (rule 29)

	')'            reduce using rule 29
	'->'           shift, and enter state 171


State 161

	Type2 -> '(' Type ')' .                             (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'->'           reduce using rule 28
	':'            reduce using rule 28
	';'            reduce using rule 28
	']'            reduce using rule 28


State 162

	Type2 -> '[' Type2 ']' .                            (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'->'           reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	']'            reduce using rule 21


State 163

	Exp3 -> Exp4 '?' Exp ':' Exp3 .                     (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	']'            reduce using rule 49


State 164

	Decl_stmt -> 'def' Dec '(' ListDec ')' . ':' Stmt    (rule 31)

	':'            shift, and enter state 170


State 165

	Iter_stmt -> 'for' Expression_stmt Expression_stmt ':' Stmt .    (rule 35)

	'('            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'False'        reduce using rule 35
	'True'         reduce using rule 35
	'['            reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'def'          reduce using rule 35
	'else'         reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'lambda'       reduce using rule 35
	'not'          reduce using rule 35
	'print'        reduce using rule 35
	'return'       reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35
	%eof           reduce using rule 35


State 166

	Iter_stmt -> 'for' Expression_stmt Expression_stmt Exp ':' . Stmt    (rule 34)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 169
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 167

	Selection_stmt -> 'if' Exp ':' Stmt 'else' . ':' Stmt    (rule 39)

	':'            shift, and enter state 168


State 168

	Selection_stmt -> 'if' Exp ':' Stmt 'else' ':' . Stmt    (rule 39)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 174
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 169

	Iter_stmt -> 'for' Expression_stmt Expression_stmt Exp ':' Stmt .    (rule 34)

	'('            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'False'        reduce using rule 34
	'True'         reduce using rule 34
	'['            reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'def'          reduce using rule 34
	'else'         reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'lambda'       reduce using rule 34
	'not'          reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34
	%eof           reduce using rule 34


State 170

	Decl_stmt -> 'def' Dec '(' ListDec ')' ':' . Stmt    (rule 31)

	'('            shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	';'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'def'          shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'lambda'       shift, and enter state 46
	'not'          shift, and enter state 47
	'print'        shift, and enter state 48
	'return'       shift, and enter state 49
	'while'        shift, and enter state 50
	'{'            shift, and enter state 51
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 5
	Integer        goto state 6
	String         goto state 7
	Stmt           goto state 173
	Dec            goto state 9
	Decl_stmt      goto state 10
	Compound_stmt  goto state 11
	Iter_stmt      goto state 12
	Expression_stmtgoto state 13
	Selection_stmt goto state 14
	Flow_stmt      goto state 15
	Print_stmt     goto state 16
	Exp            goto state 17
	Exp2           goto state 18
	Exp3           goto state 19
	Exp4           goto state 20
	Exp5           goto state 21
	Exp6           goto state 22
	Exp7           goto state 23
	Exp8           goto state 24
	Exp9           goto state 25
	Exp10          goto state 26
	Exp11          goto state 27
	Exp12          goto state 28
	Exp13          goto state 29
	Constant       goto state 30
	Exp1           goto state 31
	Unary_exp_operatorgoto state 32
	Unary_log_operatorgoto state 33

State 171

	Type -> '(' Type2 '->' . Type ')'                   (rule 19)
	Type2 -> Type2 '->' . Type                          (rule 27)

	'('            shift, and enter state 156
	'Any'          shift, and enter state 104
	'Bool'         shift, and enter state 105
	'Int'          shift, and enter state 106
	'Invalid'      shift, and enter state 107
	'String'       shift, and enter state 108
	'Unit'         shift, and enter state 157
	'['            shift, and enter state 109

	Type           goto state 172
	Type2          goto state 154
	Type1          goto state 155

State 172

	Type -> '(' Type2 '->' Type . ')'                   (rule 19)
	Type2 -> Type2 '->' Type .                          (rule 27)

	')'            shift, and enter state 175
			(reduce using rule 27)

	'->'           reduce using rule 27


State 173

	Decl_stmt -> 'def' Dec '(' ListDec ')' ':' Stmt .    (rule 31)

	'('            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'False'        reduce using rule 31
	'True'         reduce using rule 31
	'['            reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'def'          reduce using rule 31
	'else'         reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'lambda'       reduce using rule 31
	'not'          reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31
	%eof           reduce using rule 31


State 174

	Selection_stmt -> 'if' Exp ':' Stmt 'else' ':' Stmt .    (rule 39)

	'('            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'False'        reduce using rule 39
	'True'         reduce using rule 39
	'['            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'def'          reduce using rule 39
	'else'         reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'lambda'       reduce using rule 39
	'not'          reduce using rule 39
	'print'        reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39
	%eof           reduce using rule 39


State 175

	Type -> '(' Type2 '->' Type ')' .                   (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'->'           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	']'            reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 100
Number of terminals: 55
Number of non-terminals: 38
Number of states: 176
